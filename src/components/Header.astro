---
import Logo from '@/components/Logo.astro'
import Separator from '@/components/ui/Separator.astro'
import { Icon } from 'astro-icon/components'
import { cn } from '@/lib/utils'
import site from '@/constants/site'
const socialLinks = Object.entries(site.socialLinks)
import { buttonVariants } from '@/components/ui/Button.astro'

const pathname = Astro.url.pathname

const normalizedPathName =
  pathname.length > 1 && pathname.endsWith('/')
    ? pathname.slice(0, -1)
    : pathname

const pages = [
  {
    title: 'Inicio',
    href: '/',
    active: pathname === '/',
    noReload: true,
  },
  {
    title: 'Productos',
    href: '/productos',
    active: normalizedPathName.startsWith('/productos'),
  },
]
---

<header
  id="main-header"
  class="sticky z-50 top-0 left-0 h-[64px] bg-background"
  data-state="closed"
>
  <div
    class="main-navigation container flex items-center mx-auto justify-between px-4 h-full"
  >
    <a href="/" data-astro-reload>
      <Logo />
    </a>

    <!-- Desktop Nav -->
    <nav class="hidden md:flex gap-4 items-center">
      {
        pages.map((page) => (
          <a
            href={page.href}
            data-astro-reload
            class={cn(
              'flex justify-center items-center  hover:text-primary ',
              page.active && 'text-primary font-bold',
            )}
          >
            <span class="">{page.title}</span>
          </a>
        ))
      }
    </nav>
    <div class="hidden md:flex justify-center items-center">
      {
        socialLinks.map(([name, link]) => (
          <a
            class="hover:text-primary"
            href={link}
            rel="noopener noreferrer"
            target="_blank"
          >
            <Icon name={`tabler:brand-${name}`} size={30} />
          </a>
        ))
      }
    </div>
    <aside
      id="mobile-menu"
      class={`fixed z-50 left-0 top-[calc(4rem+1px)] bg-background 
w-screen h-[calc(100svh-4rem)] justify-center flex
          transition duration-300 -translate-x-full invisible
md:hidden
        `}
    >
      <!-- Mobile Nav -->
      <nav class="flex flex-col w-full px-10 pt-4">
        {
          pages.map((item) => (
            <a
              href={item.href}
              data-astro-reload
              class={cn(
                'flex justify-center flex-col items-center h-16 w-full hover:text-primary border-b border-b-foreground/20',
                item.active && 'text-primary font-bold',
              )}
            >
              <span class="">{item.title}</span>
            </a>
          ))
        }

        <div
          class="border-b h-16 flex items-center justify-center border-b-foreground/20"
        >
          <a href={`tel:+51${site.phone}`} class="flex items-center">
            <Icon class="mr-2" name="tabler:phone" />
            {site.phone}
          </a>
        </div>
        <div class="flex justify-center">
          <div class="flex items-center mt-4">
            {
              socialLinks.map(([name, link]) => (
                <a
                  class="hover:text-primary"
                  href={link}
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  <Icon name={`tabler:brand-${name}`} size={35} />
                </a>
              ))
            }
          </div>
        </div>
      </nav>
    </aside>
    <div class="md:hidden">
      <button id="burger-button" class="transition" aria-label="menu mobile">
        <Icon name="tabler:menu" size={30} />
        <Icon name="tabler:x" size={35} />
      </button>
    </div>
  </div>
  <Separator class="h-[2px]" />
</header>

<script>
  document.addEventListener('astro:page-load', () => {
    const $header = document.querySelector('#main-header') as HTMLDivElement
    const $burgerBtn = $header.querySelector(
      '#burger-button',
    ) as HTMLButtonElement

    $burgerBtn.addEventListener('click', () => {
      const isOpen = $header.getAttribute('data-state') !== 'open'
      $header.setAttribute('data-state', isOpen ? 'open' : 'closed')
      document.body.toggleAttribute('data-mobile-menu-expanded', isOpen)
    })
  })
</script>
<style>
  [data-state='open'] #mobile-menu {
    transform: translateX(0);
    visibility: visible;
  }
  [data-state='closed'] [data-icon='tabler:x'] {
    display: none;
  }

  [data-state='open'] [data-icon='tabler:menu'] {
    display: none;
  }

  [data-state='open'] button {
    transform: rotate(90deg);
  }
  :global([data-mobile-menu-expanded]) {
    overflow-y: hidden;
  }
</style>
